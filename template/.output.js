/* generated by Svelte v3.59.1 */
import {
	SvelteElement,
	append,
	attribute_to_object,
	binding_callbacks,
	detach,
	element,
	flush,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "svelte/internal";

import * as echarts from "echarts";
import { onMount } from "svelte";

function create_fragment(ctx) {
	let main;
	let div;
	let t0;
	let h1;
	let t1;
	let t2;
	let t3;
	let t4;
	let p;

	return {
		c() {
			main = element("main");
			div = element("div");
			t0 = space();
			h1 = element("h1");
			t1 = text("Hello ");
			t2 = text(/*name*/ ctx[0]);
			t3 = text("!");
			t4 = space();
			p = element("p");

			p.innerHTML = `Visit the <a href="https://svelte.dev/tutorial">Svelte tutorial</a> to learn how to build Svelte
    apps.`;

			this.c = noop;
		},
		m(target, anchor) {
			insert(target, main, anchor);
			append(main, div);
			/*div_binding*/ ctx[2](div);
			append(main, t0);
			append(main, h1);
			append(h1, t1);
			append(h1, t2);
			append(h1, t3);
			append(main, t4);
			append(main, p);
		},
		p(ctx, [dirty]) {
			if (dirty & /*name*/ 1) set_data(t2, /*name*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(main);
			/*div_binding*/ ctx[2](null);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let container;

	onMount(() => {
		const chart = echarts.init(container);

		chart.setOption({
			title: { text: "ECharts 入门示例" },
			tooltip: {},
			xAxis: {
				data: ["衬衫", "羊毛衫", "雪纺衫", "裤子", "高跟鞋", "袜子"]
			},
			yAxis: {},
			series: [
				{
					name: "销量",
					type: "bar",
					data: [5, 20, 36, 10, 10, 20]
				}
			]
		});
	});

	let { name } = $$props;

	function div_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			container = $$value;
			$$invalidate(1, container);
		});
	}

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
	};

	return [name, container, div_binding];
}

class Component extends SvelteElement {
	constructor(options) {
		super();
		const style = document.createElement('style');
		style.textContent = `main{text-align:center;padding:1em;max-width:240px;margin:0 auto}h1{color:#ff3e00;text-transform:uppercase;font-size:4em;font-weight:100}@media(min-width: 640px){main{max-width:none}}`;
		this.shadowRoot.appendChild(style);

		init(
			this,
			{
				target: this.shadowRoot,
				props: attribute_to_object(this.attributes),
				customElement: true
			},
			instance,
			create_fragment,
			safe_not_equal,
			{ name: 0 },
			null
		);

		if (options) {
			if (options.target) {
				insert(options.target, this, options.anchor);
			}

			if (options.props) {
				this.$set(options.props);
				flush();
			}
		}
	}

	static get observedAttributes() {
		return ["name"];
	}

	get name() {
		return this.$$.ctx[0];
	}

	set name(name) {
		this.$$set({ name });
		flush();
	}
}

export default Component;